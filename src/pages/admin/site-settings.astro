---
import TextArea from "../../components[admin]/TextArea.astro";
import TextInput from "../../components[admin]/TextInput.astro";
import { isAdminLoggedIn } from "../../js/utils";
import AdminLayout from "../../layouts/adminLayout.astro";

const adminCookie = Astro.cookies.get("admin");

if (!isAdminLoggedIn(adminCookie)) {
    return Astro.redirect("/admin/signin/");
}

var messageToShow = "";
let showOverlay = false;

if (Astro.request.method === "POST") {
    showOverlay = true;
    try {
        const data = await Astro.request.formData();
        console.log("Form Data at client side - ", data);
        
        if(data.get("widgetTitle") != null){
            if(data.get("widgetId") != null){
                const response = await fetch(
                    Astro.site + "api/sidebarWidgets/"+ data.get("widgetId")?.toString(),
                    {
                        method: "PUT",
                        body: data,
                    },
                );
        
                const APIResponse = await response.json();
                if (APIResponse.message == "Sidebar Widget Data Updated Successfully") {
                    messageToShow =
                        "Sidebar Widget Data Updated Successfully.";
                }
            }
            else{
                const response = await fetch(
                    Astro.site + "api/sidebarWidgets.json",
                    {
                        method: "POST",
                        body: data,
                    },
                );
        
                const APIResponse = await response.json();
                if (APIResponse.message == "Sidebar Widget Data Saved Successfully") {
                    messageToShow =
                        "New Sidebar Widget is Added.";
                }
            }
        }
        else{
            const response = await fetch(
                Astro.site + "api/siteData/" + import.meta.env.SiteSettingsID,
                {
                    method: "PUT",
                    body: data,
                },
            );
    
            const APIResponse = await response.json();
            if (APIResponse.message == "Site Setting Data Updated Successfully") {
                messageToShow =
                    "Site Setting Data Saved. Please Redeploy your site to see the changes";
            }
        }
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message);
        }
    }
}

//Fetching Site Settings
const allSiteFetch: any = await fetch(Astro.site + "api/siteData.json").then(
    (Response) => Response.json(),
);

const allSidebarWidgetsFetch: any = await fetch(Astro.site + "api/sidebarWidgets.json").then(
    (Response) => Response.json(),
);
---

<AdminLayout pageName="Site Settings" pageTitle="Site Settings">
    <span class="p-5 flex items-center relative flex-col w-full">
        <form method="post" class="w-full flex gap-2">
            <div class="fieldsWrapper w-10/12">
                <h2 class="mb-4 text-xl font-bold">General Settings</h2>
                <div class="fields w-2/3 flex flex-col gap-3">
                    <span class="flex gap-2">
                        <span class="flex flex-col items-center gap-4 w-1/2">
                            <label class="w-full text-left">Site Logo *</label>
                            <span
                                class="flex flex-col justify-center items-center gap-2 w-full px-12 py-3 border-black border-2 border-dashed rounded-xl"
                            >
                                <img
                                    id="uploadedImageLogo"
                                    class="size-[110px] object-contain rounded-md"
                                    src={allSiteFetch[0].siteLog.url != ""
                                        ? allSiteFetch[0].siteLog.url
                                        : "/assets/images/placeholderImage.jpg"}
                                />
                                <!-- {
                                        (panelInfo.data.paneFeaturedImage != null)
                                        ? ( panelInfo.data.paneFeaturedImage.url == "" ) ? "/assets/images/placeholderImage.jpg" : panelInfo.data.paneFeaturedImage.url 
                                        : "/assets/images/placeholderImage.jpg"
                                    } -->
                                <input
                                    id="uploadInputLogo"
                                    name="uploadInputLogo"
                                    type="file"
                                    class="text-xs w-fit"
                                    accept="image/*"
                                />
                            </span>
                        </span>

                        <span class="flex flex-col items-center gap-4 w-1/2">
                            <label class="w-full text-left"
                                >Site Favicon *</label
                            >
                            <span
                                class="flex flex-col justify-center items-center gap-2 w-full px-12 py-3 border-black border-2 border-dashed rounded-xl"
                            >
                                <img
                                    id="uploadedImageFavicon"
                                    class="size-[110px] object-cover rounded-md"
                                    src={allSiteFetch[0].siteFavicon.url != ""
                                        ? allSiteFetch[0].siteFavicon.url
                                        : "/assets/images/placeholderImage.jpg"}
                                />
                                <!-- {
                                        (panelInfo.data.paneFeaturedImage != null)
                                        ? ( panelInfo.data.paneFeaturedImage.url == "" ) ? "/assets/images/placeholderImage.jpg" : panelInfo.data.paneFeaturedImage.url 
                                        : "/assets/images/placeholderImage.jpg"
                                    } -->
                                <input
                                    id="uploadInputFav"
                                    name="uploadInputFav"
                                    type="file"
                                    class="text-xs w-fit"
                                    accept="image/*"
                                />
                            </span>
                        </span>
                    </span>

                    <TextInput
                        textValue={allSiteFetch[0].SiteTitle}
                        isRequired={true}
                        placeholder="Example - My SMM Compare Site"
                        textBoxId="webTitle"
                        textLabelText="Website Title"
                    />

                    <TextArea
                        textValue={allSiteFetch[0].siteMetaDescription}
                        isRequired={true}
                        placeholder="130 Characters Meta Description"
                        textBoxId="webMetaDes"
                        textLabelText="Site Meta Description"
                    />
                </div>

                <span
                    class="divider border-t-2 border-dashed border-gray-600 my-5 block"
                ></span>
                <h2 class="mb-4 text-xl font-bold">Homepage Settings</h2>
                <div class="fields w-2/3 flex flex-col gap-3">
                    <span class="flex flex-col items-center gap-4 w-full">
                        <label class="w-full text-left"
                            >Header Background Image *</label
                        >
                        <span
                            class="flex flex-col justify-center items-center gap-2 w-full px-12 py-3 border-black border-2 border-dashed rounded-xl"
                        >
                            <img
                                id="uploadedImageHeaderBg"
                                class="w-[110px] object-cover rounded-md"
                                src={allSiteFetch[0].homeBackgroundImage.url !=
                                ""
                                    ? allSiteFetch[0].homeBackgroundImage.url
                                    : "/assets/images/placeholderImage.jpg"}
                            />
                            <!-- {
                                    (panelInfo.data.paneFeaturedImage != null)
                                    ? ( panelInfo.data.paneFeaturedImage.url == "" ) ? "/assets/images/placeholderImage.jpg" : panelInfo.data.paneFeaturedImage.url 
                                    : "/assets/images/placeholderImage.jpg"
                                } -->
                            <input
                                id="uploadInputHeaderBg"
                                name="uploadInputHeaderBg"
                                type="file"
                                class="text-xs w-fit"
                                accept="image/*"
                            />
                        </span>
                    </span>
                    <TextInput
                        textValue={allSiteFetch[0].homeHeaderText}
                        isRequired={true}
                        placeholder="Best SMM Panel"
                        textBoxId="siteHeaderTitle"
                        textLabelText="Header Title"
                    />
                    <TextInput
                        textValue={allSiteFetch[0].homeHeaderPara}
                        isRequired={true}
                        placeholder="Best SMM Panel Lorem ipsum dolor sit amet consectetur adipisicing elit. Quidem ipsum blanditiis in officiis distinctio."
                        textBoxId="siteHeaderParagraph"
                        textLabelText="Header Paragraph"
                    />
                </div>

                <span
                    class="divider border-t-2 border-dashed border-gray-600 my-5 block"
                ></span>

                <h2 class="mb-4 text-xl font-bold">Functional Settings</h2>
                <div class="fields w-2/3 flex flex-col gap-3">
                    <TextInput
                        textValue={allSiteFetch[0].homePanelCount}
                        inputType="number"
                        isRequired={true}
                        placeholder="10"
                        textBoxId="sitePanelCount"
                        textLabelText="Number of Panels to show in Home Page"
                    />
                    <TextInput
                        textValue={allSiteFetch[0].platformServiceCount}
                        inputType="number"
                        isRequired={true}
                        placeholder="10"
                        textBoxId="siteServiceCount"
                        textLabelText="Number of Services that will be shown per page in Services Page"
                    />
                </div>

                <span
                    class="divider border-t-2 border-dashed border-gray-600 my-5 block"
                ></span>

                <h2 class="mb-4 text-xl font-bold">
                    Manage Sidebar (Homepage)
                </h2>
                <div
                    class="sidebarWidgets w-2/3 flex flex-col gap-4 justify-center items-center"
                >
                    <button id="widgetAddBtn"
                        type="button"
                        class="size-fit w-auto p-3 text-sm text-white rounded-full bg-[#5344f5] hover:bg-[#3d32b3] capitalize"
                    >
                        <i class="fa-solid fa-plus"></i> Add New Widget</button
                    >

                    <ol class="w-full">
                        {
                            allSidebarWidgetsFetch.map((SidebarWidget:any) => (
                                <li class="relative flex justify-between items-center rounded-lg my-3 w-full px-4 py-1 bg-gray-200 hover:bg-gray-300">
                                    {SidebarWidget.widgetTitle} <i class="h-6 w-6 rounded-full hover:bg-gray-400 flex justify-center items-center  cursor-pointer fa-solid fa-ellipsis-vertical" onclick="triggerMenu(this)"></i> 
                                    <span class="options hide min-w-[100px] absolute border border-[#8080802e] py-2 top-0 -right-24 z-10 flex flex-col bg-white rounded-lg shadow-sm">
                                        <ul>
                                            <li class="p-2 cursor-pointer px-3 hover:bg-[#bebebe5e]" data-id={SidebarWidget.id} onclick="triggerServiceForm(this, true)" data-widgetTitle={SidebarWidget.widgetTitle} data-widgetHTMLCode={SidebarWidget.widgetCodeBlock}>Edit</li>
                                            <li class="p-2 cursor-pointer px-3 hover:bg-[#bebebe5e] deleteBtn" data-id={SidebarWidget.id} >Delete</li>
                                        </ul>
                                    </span>
                                </li>
                            ))
                        }
                    </ol>
                </div>

                <input type="hidden" name="logoImageName" id="logoImageName" />
                <input
                    type="hidden"
                    name="logoImageBase64"
                    id="logoImageBase64"
                />
                <input
                    type="hidden"
                    name="logoImageFileType"
                    id="logoImageFileType"
                />

                <input
                    type="hidden"
                    name="faviconImageName"
                    id="faviconImageName"
                />
                <input
                    type="hidden"
                    name="faviconImageBase64"
                    id="faviconImageBase64"
                />
                <input
                    type="hidden"
                    name="faviconImageFileType"
                    id="faviconImageFileType"
                />
                <input
                    type="hidden"
                    name="homepgBgImageName"
                    id="homepgBgImageName"
                />
                <input
                    type="hidden"
                    name="homepgBgImageBase64"
                    id="homepgBgImageBase64"
                />
                <input
                    type="hidden"
                    name="homepgBgImageFileType"
                    id="homepgBgImageFileType"
                />
            </div>

            <button
                type="submit"
                class="size-fit sticky top-4 w-auto px-5 py-3 text-white rounded-lg bg-[#5344f5] hover:bg-[#3d32b3] capitalize"
                ><i class="fa-solid fa-play"></i> Save</button
            >
        </form>

        <div class="Overlay modalForm top-0 invisible absolute size-full z-[1] bg-[#525252a5] p-6">
            <form
                method="post"
                class="w-full sticky top-[10vh] p-6 bg-[#f0f8ff] rounded-md flex flex-col justify-center items-center gap-5">
                <i class="closeBtn modalForm absolute -right-2 -top-2 cursor-pointer fa-solid fa-circle-xmark text-xl"></i>
                <div class="formContainer flex justify-center w-full lg:gap-24">
                    <div class="fields flex flex-col gap-5 w-2/4">
                        <TextInput
                            isRequired={true}
                            placeholder="Widget Title"
                            textBoxId="widgetTitle"
                            textLabelText="Widget Title"
                        />
    
                        <TextArea
                            isRequired={true}
                            placeholder="<Write or Paste HTML Code here/>"
                            textBoxId="widgetHTMLCode"
                            textLabelText="Write or Paste HTML Code here"
                        />
                        <input type="hidden" name="widgetId" id="widgetId">
                    </div>
                </div>
    
                <button id="formAddWidgetBtn"
                    type="submit"
                    class="size-fit w-auto px-5 py-3 text-white rounded-lg bg-[#5344f5] hover:bg-[#3d32b3] capitalize">
                    <i class="fa-solid fa-play"></i> Add Widget
                </button>
            </form>
        </div>
    </span>
    
    {
        messageToShow && (
            <span
                class="toast hidden"
                id="toast"
                data-message={messageToShow}
                data-destination={"/admin/"}
            />
        )
    }
</AdminLayout>

<script is:inline>
    //#region Image Upload
    //LOGO
    document
        .getElementById("uploadInputLogo")
        .addEventListener("change", function (event) {
            const file = event.target.files[0];

            if (file) {
                const reader = new FileReader();
                reader.readAsDataURL(file);

                reader.onload = function () {
                    const imageDataURL = reader.result;
                    document.getElementById("logoImageName").value = file.name;
                    document.getElementById("logoImageBase64").value =
                        imageDataURL.split("base64,")[1];
                    document.getElementById("logoImageFileType").value =
                        file.type;
                    document.getElementById("uploadedImageLogo").src =
                        imageDataURL;
                };
            }
        });
    //SITE FAVICON
    document
        .getElementById("uploadInputFav")
        .addEventListener("change", function (event) {
            const file = event.target.files[0];

            if (file) {
                const reader = new FileReader();
                reader.readAsDataURL(file);

                reader.onload = function () {
                    const imageDataURL = reader.result;
                    document.getElementById("faviconImageName").value =
                        file.name;
                    document.getElementById("faviconImageBase64").value =
                        imageDataURL.split("base64,")[1];
                    document.getElementById("faviconImageFileType").value =
                        file.type;
                    document.getElementById("uploadedImageFavicon").src =
                        imageDataURL;
                };
            }
        });
    //HOMEPAGE BG
    document
        .getElementById("uploadInputHeaderBg")
        .addEventListener("change", function (event) {
            const file = event.target.files[0];

            if (file) {
                const reader = new FileReader();
                reader.readAsDataURL(file);

                reader.onload = function () {
                    const imageDataURL = reader.result;
                    document.getElementById("homepgBgImageName").value =
                        file.name;
                    document.getElementById("homepgBgImageBase64").value =
                        imageDataURL.split("base64,")[1];
                    document.getElementById("homepgBgImageFileType").value =
                        file.type;
                    document.getElementById("uploadedImageHeaderBg").src =
                        imageDataURL;
                };
            }
        });
    //#endregion

    //#region Add Service Form Pop Up
    function triggerServiceForm(widgetHolder=null, isEdit = false) {
        var widgetTitleVal = widgetHTMLCodeVal = "";

        if(isEdit == true){
            widgetTitleVal = widgetHolder.getAttribute("data-widgetTitle");
            widgetHTMLCodeVal = widgetHolder.getAttribute("data-widgetHTMLCode");

            widgetHolder.parentElement.parentElement.classList.toggle("hide");
            document.querySelector("#formAddWidgetBtn").textContent="Update Widget";
            document.querySelector("#formAddWidgetBtn").setAttribute("data-widgetID", widgetHolder.getAttribute("data-id"));
            document.querySelector("#widgetId").value=widgetHolder.getAttribute("data-id");
        }
        document
            .querySelector(".Overlay.modalForm")
            .classList.toggle("invisible");
        document.getElementById("widgetTitle").value = widgetTitleVal;
        document.getElementById("widgetHTMLCode").value = widgetHTMLCodeVal;
    }
    const addWidgetBtn = document.getElementById("widgetAddBtn");
    const modalCloseBtn = document.querySelector(".closeBtn.modalForm");
    addWidgetBtn.onclick = () => triggerServiceForm();
    modalCloseBtn.onclick = () => triggerServiceForm();
    //#endregion
    
    //#region Service Delete Functionality
    var allDeleteBtns = document.querySelectorAll(
        ".options .deleteBtn",
    );
    allDeleteBtns.forEach((sidebarWidgetDeletebtn) => {
        sidebarWidgetDeletebtn.addEventListener("click", async () => {

            var resp = window.confirm(`Are you sure you want to delete this Widget?`);
            if(resp == true)
            await fetch(
                    "/api/sidebarWidgets/" +
                        sidebarWidgetDeletebtn.getAttribute("data-id").toString(),
                    {
                        method: "DELETE",
                    },
                )
                    .then((response) => response.json())
                    .then((data) => {
                        var message = "";
                        if (data.status != 200) {
                            message =
                                "Widget NOT Deleted. An problem occured while deleting";
                        } else {
                            message = "Sidebar Widget Deleted";
                            sidebarWidgetDeletebtn.parentElement.parentElement.parentElement.remove();
                        }
    
                        Toastify({
                            text: message,
                            duration: 3000,
                            close: true,
                            gravity: "bottom", // `top` or `bottom`
                            position: "right", // `left`, `center` or `right`
                            stopOnFocus: true, // Prevents dismissing of toast on hover
                            style: {
                                background:
                                    "linear-gradient(to right, #5344f5, #3dbbc9)",
                            },
                            onClick: function () {}, // Callback after click
                        }).showToast();
                    });
        });
    });
    //#endregion

</script>
