---
import RowData from "../../components[admin]/rowData.astro";
import AdminLayout from "../../layouts/adminLayout.astro";
import {formatDate} from "../../js/utils.ts";

let toastMessage;

const deletePanelID = Astro.cookies.get("deletePanelID");
const deletePanelMessage = Astro.cookies.get("deletePanelMessage");
// console.log("Delete Panel ID - ", deletePanelID?.value);

if(deletePanelMessage != undefined ){
    if(deletePanelMessage?.value == "Delete Successful"){
        toastMessage = "Panel Deleted"
    }
    else
        toastMessage = "Panel NOT Deleted. An problem occured while deleting."

    Astro.cookies.delete("deletePanelID");
    Astro.cookies.delete("deletePanelMessage");
}


interface panelStructure {
    id: string;
    panelAPILink: string;
    panelTitle: string;
    panelWebsiteURL: string;
    panelSlug: string;
    xata: {
        createdAt: string;
    };
}

const allSMMPanels = await fetch(Astro.site + "api/panels.json");
const panelAPIResponse: panelStructure[] = await allSMMPanels.json();
---

<AdminLayout pageName="SMM Panels" pageTitle="SMM Panels">
    <div class="table-data-container w-full">
        <div
            class="table-header flex w-full py-4 bg-[#6e7bd9] text-white font-bold rounded-tr-lg rounded-tl-lg"
        >
            <div class="field px-3 w-[6%]">No.</div>
            <div class="field px-3 w-[25%]">Title</div>
            <div class="field px-3 w-[24%]">Publish Date</div>
            <div class="field px-3 w-[25%]">API URL</div>
            <div class="field px-3 w-[15%]">Action</div>
        </div>
        <div class="table-data w-full rounded-br-lg rounded-bl-lg">
            {
                panelAPIResponse.reverse().map((panel, index) => (
                    <RowData
                        API_URL={panel.panelAPILink}
                        Action={panel.id}
                        No={index + 1}
                        Publish_Date={formatDate(panel.xata.createdAt)}
                        Title={panel.panelTitle}
                    />
                ))
            }
        </div>
    </div>

    {
        toastMessage && (
            <span
                class="toast hidden"
                id="toast"
                data-message={toastMessage}
            />
        )
    }
</AdminLayout>

<script is:inline>
    //#region Toast Notifications
    try {
        Toastify({
            text: document.querySelector("#toast").getAttribute("data-message"),
            duration: 3000,
            close: true,
            gravity: "bottom", // `top` or `bottom`
            position: "right", // `left`, `center` or `right`
            stopOnFocus: true, // Prevents dismissing of toast on hover
            style: {
                background: "linear-gradient(to right, #5344f5, #3dbbc9)",
            },
            onClick: function () {}, // Callback after click
        }).showToast();
    } catch (error) {
        console.log(error);
    }
    //#endregion
</script>