---
import PanelLayout from "../../layouts/PanelLayout.astro";

//import servicePlatformsData from "../../data/temp-services";
const allServicesFetch = await fetch(Astro.site + "api/services.json");
const allServices = await allServicesFetch.json();

export const prerender = true;
export async function getStaticPaths (){

    const allPanelsFetch:any = await fetch(Astro.site + "api/panels.json")
    const allPanelRes : panelSchema[] = await allPanelsFetch.json();

    return allPanelRes.map((panel:any) => (
        {
            params : { slug: panel.panelSlug },
            props: { panel },
        }
    ))
} ;

const { panel } = Astro.props;
const { slug } = Astro.params;
// console.log(panel);

var ratingCollection : String[] = [];
for (let j = 0; j < 5; j++) {
    if(j < panel.rating)
        ratingCollection.push("fa-solid fa-star");
    else
        ratingCollection.push("fa-regular fa-star");
}

// console.log("Rating Stars Classes", ratingCollection);

const servicesFetch = await fetch(`${panel.panelAPILink}?key=${panel.panelAPIKey}&action=services`)
const servicesResponse = await servicesFetch.json();

var platformList : any = [];
let allServiceNames : string[] = [];

servicesResponse.map((service:any) => (
    allServiceNames.push(service.name.toLowerCase())
))

for(let i = 0; i < allServices.length; i++) {
    for (let j = 0; j < allServiceNames.length; j++) {
        if(isSame(allServiceNames[j] , allServices[i].serviceTitle)){
            if(platformList.includes(allServices[i]) == false)
            platformList.push(allServices[i]);
        }
    }
}

function isSame(APIService :string , platformSavedService : string){
    if(APIService.toLowerCase().includes(platformSavedService.toLowerCase()))
    return true;
}

interface panelSchema{
    id: string,
    paneFeaturedImage: {
        url: string,
    },
    panelAPIKey: string,
    panelAPILink:  string,
    panelTitle:  string,
    panelWebsiteURL:  string,
    panelSlug:  string,
    panelTextDescrition:  string,
    panelMetaDesc:  string,
    panelTotalServices: number,
    rating : number,
    paymentOptions : {
        payDepo : string,
        payOption : string
    }
}

---
<PanelLayout title={ panel.panelTitle } metaDescription={panel.panelMetaDesc}>
    <div class="content-wrapper flex flex-wrap lg:justify-start justify-center gap-5 my-6 px-5">
        
        <article class="flex flex-col gap-5">
            <h1 class="text-4xl font-bold">{panel.panelTitle}</h1>
            <img src={panel.paneFeaturedImage.url} alt={panel.panelTitle + " Panel Image"} class="shadow-lg rounded-lg">
            <span class="w-full flex justify-center items-center">
                <a target="_blank" class="rounded-lg p-3 bg-blue-600 text-white" href={panel.panelWebsiteURL}>Visit {panel.panelTitle}</a>
            </span>
            <div class="article-wrapper flex lg:flex-row flex-col gap-4">
                <div class="post-content lg:w-4/6 w-full flex flex-col gap-4">
                    <p>{panel.panelTextDescrition}</p>
                    
                    <div class="aboutPanel flex justify-between items-center">
                        <h2 class="text-3xl font-semibold">Total number of Services - {servicesResponse.length}</h2>
                    </div>
    
                    <h2 class="text-3xl font-semibold">{panel.panelTitle} provides services for these platforms:</h2>
                    <div class="services-cloud flex flex-wrap gap-3 text-white">
                        {
                            platformList.map((service:any) => (                                                         
                                <a href={"/services/"+ service.serviceTitle.toLowerCase().replaceAll(" ", "-")} class="lg:px-4 px-2 capitalize lg:py-2 py-1 lg:text-base text-[15px] rounded-md cursor-pointer hover:brightness-75" style={`background-color: ${service.serviceColor}`}
                                >{service.serviceTitle}</a>
                            ))
                        }
                    </div>
                </div>
                <aside class="lg:w-2/6 w-full">
                    <!-- Rating -->
                    <div class="reviewsBox mb-4 flex gap-3 items-center bg-white p-3 rounded-md shadow-md">
                        <h2 class="text-3xl font-semibold">Rating - </h2>
                        <span class="flex gap-2 text-yellow-400 text-2xl">
                            {
                                ratingCollection.map(rating =>(
                                    <i class={rating.toString()}></i>
                                ))
                            }
                        </span>
                    </div>
    
                    <!-- Payment Options -->
    
                    <div class="paymentOptions w-full mb-4 bg-white p-3 rounded-md shadow-md">
                        <h2 class="text-3xl font-semibold">Payment Options</h2>
                        
                        <div class="table w-full mt-4">
                            <div class="header flex w-full p-2 font-semibold bg-gray-300">
                                <div class="col w-1/2">Method</div>
                                <div class="col w-1/2">Minimum Deposit</div>
                            </div>
                            {
                                panel.paymentOptions.map((paymentOp:any) => (
                                <div class="row flex w-full p-2">
                                    <div class="col w-1/2">{paymentOp.payOption}</div>
                                    <div class="col w-1/2">{paymentOp.payDepo}</div>
                                </div>    
                                ))
                            }
                        </div>
                    </div>
    
                    
                </aside>
            </div>
    
            <h2 class="text-3xl font-semibold">20 Latest Services by {panel.panelTitle}</h2>
            
            <div class="services-table-holder shadow-2xl mt-5 lg:w-full w-[89vw] overflow-auto">
                <div class="table-wrapper md:w-full w-[700px] ">
                    <span class="offerHeader w-full flex bg-[#36304a] font-semibold text-white ">
                        <span class="offer_id my-6 w-[5%] pl-2">S.No</span>
                        <span class="offer_service my-6 w-[41%]">Service</span>
                        <span class="offer_Minorder my-6 w-[18%]">Min order</span>
                        <span class="offer_Maxorder my-6 w-[18%]">Max order</span>
                        <span class="offer_rate my-6 w-[18%]">Rate per 1000</span>
                    </span>
        
                    {
                        servicesResponse.slice(0,20).map((service:any, j :number) => (
                            <span class="offerList w-full flex border-b border-gray-400">
                                <span class="offer_id line-clamp-1 my-3 w-[5%] pl-2">{j + 1}</span>
                                <span class="offer_service line-clamp-1 my-3 w-[41%] text-left" title={service.name}>{service.name}</span>
                                <span class="offer_Minorder line-clamp-1 my-3 w-[18%]">{service.min}</span>
                                <span class="offer_Maxorder line-clamp-1 my-3 w-[18%]">{service.max}</span>
                                <span class="offer_rate line-clamp-1 my-3 w-[18%]">${service.rate}</span>
                            </span>
                        ) )
                    }
                </div>
            </div>
    
            <!-- {
                servicesResponse.length > 20 && 
                <div class="button w-full flex justify-center items-center hidden">
                    <a class="rounded-full px-3 py-2 bg-[#333333] text-white" href={"/allServer/"+slug} >Show All</a>
                </div>
            } -->
        </article>

    </div>
</PanelLayout>

